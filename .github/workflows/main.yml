name: Main buildchain
on:
  push:
    branches:
      - master
      - dev-ci-*

env:
  APP_ID: "divvun.org.satni"

jobs:
  # android_build:
  #   name: Build Android
  #   runs-on: ubuntu-latest
  #   env:
  #     keystore: main.jks
  #     version_code: ${{ github.run_number }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '2.10.2'
  #         channel: 'stable'
  #     - name: Disable Google phone-home
  #       run: flutter config --no-analytics
  #     - name: Verify flutter version
  #       run: flutter --version
  #     - name: Install keystore
  #       run: echo ${{ secrets.KEYSTORE }} | base64 -d > ${{ env.keystore }}
  #     - name: Verify Keystore contents
  #       run: sha1sum main.jks
  #     - name: Capture working directory
  #       id: pwd
  #       run: echo "::set-output name=wd::$(pwd)"
  #     - name: Inject key information
  #       env:
  #         KSK: ${{ secrets.KEYSTORE_KEY }}
  #         WD: ${{ steps.pwd.outputs.wd }}
  #         KS: ${{ env.keystore }}
  #       run: |
  #         sed -e "s|c5b6486b-091e-42cd-a253-2f62f06ac970|$KSK|g" -E -i android/key.properties
  #         sed -e "s|eed0bb70-0e0e-466a-afeb-16c49c9c22de|$WD/$KS|g" -E -i android/key.properties
  #     - name: Build APK
  #       run: flutter build apk --build-number "${{ env.version_code }}"
  #     - name: Upload APK artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk
  #         path: build/app/outputs/flutter-apk/app-release.apk
  #     - name: Build AAB
  #       run: flutter build appbundle --build-number "${{ env.version_code }}"
  #     - name: Upload AAB artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: aab
  #         path: build/app/outputs/bundle/release/app-release.aab

  # android_push:
  #   name: Deploy Android
  #   needs:
  #     - android_build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download the AAB
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: aab
  #     - name: Push the AAB to Google Play
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         packageName: ${{ env.APP_ID }}
  #         releaseFiles: app-release.aab
  #         track: internal
  #         status: draft
  #         serviceAccountJsonPlainText: "${{ secrets.SERVICE_ACCOUNT }}"

  ios_build:
    name: Build iOS
    # runs-on: macos-12
    runs-on: macos-latest
    env:
      KEYCHAIN_PASSWORD: hodor
    steps:
      - uses: actions/checkout@v2
      - name: Unpack the secrets file
        run: echo "${{ secrets.IOS_SECRET_BLOCK }}" | base64 -d > fastlane/.env.distribution
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.1'
          channel: 'stable'
      - name: Disable Google phone-home
        run: flutter config --no-analytics
      - name: Verify flutter version
        run: flutter --version
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
      - name: Prepare a keychain for imports
        run: |
          KEYCHAIN_PATH=/Users/runner/Library/Keychains/app-signing.keychain-db

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      - name: "Fastlane: Get certs and profiles"
        uses: maierj/fastlane-action@v2.2.1
        with:
          lane: "match_distribution"
          env: "distribution"
        env:
          MATCH_KEYCHAIN_NAME: app-signing
          MATCH_KEYCHAIN_PASSWORD: hodor
      - name: DEBUG the flutter environment
        run: flutter doctor -v
      - name: DEBUG get iOS build options
        run: flutter help build ipa
      - name: Build iOS IPA
        run: flutter build ipa --release
      - name: DEBUG List build directory; have to find artefacts
        run: ls -al build/ios/ipa
      - name: Attempt to sign the app
        uses: maierj/fastlane-action@v2.2.1
        with:
          lane: "signoff"
          env: "distribution"
